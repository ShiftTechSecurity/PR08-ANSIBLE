---
# tasks file for /etc/ansible/roles/install-glpi
- name: Creation de l'utilisateur "client_username"
  ansible.builtin.user:
    name: "{{ client_username }}"
    shell: /bin/bash
    groups: sudo
    append: yes
    password: "{{ client_password | password_hash('sha512') }}"
  become: yes

- name: Ajout de l'utilisateur "client_username" aux utilisateurs sudo "NO PASSWORD"
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ client_username }}"
    content: "{{ client_username }}  ALL=(ALL)  NOPASSWD: ALL"
  become: yes

- name: Copie du script de configuration de la base de donnée MariaDB
  ansible.builtin.template:
    src: /etc/ansible/roles/install-glpi/templates/mariadb.sql
    dest: /home/ansible/mariadb.sql
  become: yes

- name: Exécution du script de configuration
  ansible.builtin.shell:
    cmd: "mysql < /home/ansible/mariadb.sql"
  become: yes

- name: Téléchargement de l'archive GLPI Version 10.0.10
  ansible.builtin.get_url:
    url: https://github.com/glpi-project/glpi/releases/download/10.0.10/glpi-10.0.10.tgz
    dest: /tmp/

- name: Décompression de l'archive GLPI et configuration du propriétaire et des droits
  ansible.builtin.unarchive:
    src: /tmp/glpi-10.0.10.tgz
    dest: /var/www/
    owner: www-data
    group: www-data
    mode: '0755'
    remote_src: yes
  become: yes

- name: Installation de GLPI
  ansible.builtin.command:
    "php bin/console -n db:install -H localhost -P 3306 -d bdd_glpi -u {{ client_username }} -p {{ client_password }} -L fr_FR --reconfigure --force"
  args:
    chdir: /var/www/glpi
  become: yes

- name: Suppresion de l'archive de GLPI
  ansible.builtin.file:
    path: /tmp/glpi-10.0.10.tgz
    state: absent
  become: yes